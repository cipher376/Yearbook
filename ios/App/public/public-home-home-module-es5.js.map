{"version":3,"sources":["webpack:///src/app/public/home/home.page.html","webpack:///src/app/public/home/home.module.ts","webpack:///src/app/public/home/home.page.scss","webpack:///src/app/public/home/home.page.ts"],"names":["routes","path","component","HomePageModule","imports","forChild","declarations","HomePage","userService","router","postService","signals","modalController","postCount","pageNumber","limit","posts","sub$","showPost","destroySubscription","push","reloadPostsSource$","subscribe","_","loadRecentPost","getUserLocal","user","isAuthenticated","navigateByUrl","refresh","pageInfo","offset","getPost","length","infiniteScrollTarget","complete","refresherTarget","console","log","event","target","create","cssClass","componentProps","showHeader","mediaPage","modal","closeModalSource$","dismiss","present","selector","template"],"mappings":"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","file":"public-home-home-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" pullFactor=\\\"0.5\\\" pullMin=\\\"100\\\" pullMax=\\\"200\\\" (ionRefresh)=\\\"refreshPosts($event)\\\">\\r\\n    <ion-refresher-content pullingText=\\\"Pull to refresh\\\" refreshingSpinner=\\\"circles\\\" refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  <!-- Page header -->\\r\\n  <ion-row class=\\\"top-row-header ion-no-padding \\\">\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-no-padding \\\">\\r\\n      <ion-item class=\\\"ion-no-padding\\\">\\r\\n        <ion-row class=\\\"ion-row\\\">\\r\\n          <ion-label class=\\\"fs-13 pl-2 poppins\\\" *ngIf=\\\"isAuthenticated()\\\"> Welcome, </ion-label>\\r\\n          <ion-text class=\\\"fs-13 pl-2 poppins\\\" *ngIf=\\\"isAuthenticated()\\\"> {{ user?.firstName }} </ion-text>\\r\\n\\r\\n          <ion-label class=\\\"fs-13 pl-2 poppins\\\" *ngIf=\\\"!isAuthenticated()\\\" (click)=\\\"gotoLogin()\\\">Log In</ion-label>\\r\\n\\r\\n        </ion-row>\\r\\n        <!-- <ion-icon slot=\\\"end\\\" name=\\\"reorder-three-outline\\\" *ngIf=\\\"isAuthenticated()\\\"></ion-icon> -->\\r\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-float-right fs-13 poppins-bold ion-text-right\\\" *ngIf=\\\"isAuthenticated()&&!showPost\\\"> Home </ion-label>\\r\\n        <ion-label slot=\\\"end\\\" class=\\\"ion-float-right fs-13 poppins-bold ion-text-right\\\" *ngIf=\\\"isAuthenticated()&&showPost\\\" (click)=\\\"showPostModal()\\\"> Post </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!-- Page header ends -->\\r\\n\\r\\n\\r\\n  <!-- Top correction -->\\r\\n  <ion-row class=\\\"ion-content-top_correction\\\">\\r\\n  </ion-row>\\r\\n  <!-- Top correction ends -->\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <ion-row>\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n      <app-trending></app-trending>\\r\\n    </ion-col>\\r\\n  </ion-row> -->\\r\\n\\r\\n  <ion-row class=\\\"mt-1\\\">\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n      <app-create-post appWatchElement [elementId]=\\\"'create-post'\\\" id=\\\"create-post\\\" (isOut)=\\\"showPost=$event\\\"></app-create-post>\\r\\n      <ng-template ngFor let-post [ngForOf]=\\\"posts\\\" >\\r\\n        <app-post-widget1 [Post]=\\\"post\\\"></app-post-widget1>\\r\\n      </ng-template>\\r\\n\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <!-- Main body content ends -->\\r\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadMorePosts($event)\\\">\\r\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading ...\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>\\r\\n\\r\\n</ion-content>\";","import { WidgetsModule } from './../../widgets/widgets.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { HomePage } from './home.page';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    WidgetsModule\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9ob21lL2hvbWUucGFnZS5zY3NzIn0= */\";","import { CreatePostComponent } from './../../widgets/create-post/create-post.component';\r\nimport { MySignals } from 'src/app/shared/services/my-signals';\r\nimport { PageInfo } from './../../models/page';\r\nimport { PostService } from './../../shared/services/model-service/post.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/services/model-service/user.service';\r\nimport { Post } from 'src/app/models/post';\r\nimport { IonInfiniteScroll, ModalController } from '@ionic/angular';\r\nimport { UtilityService } from 'src/app/shared/services/providers/utility.service';\r\nimport { SchoolJoinComponent } from 'src/app/widgets/school-join/school-join.component';\r\nimport { User } from 'src/app/models/user';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.page.html',\r\n  styleUrls: ['./home.page.scss'],\r\n})\r\nexport class HomePage implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  firstname: string;\r\n\r\n  postCount = 0; // Total post fetched\r\n  pageNumber = 1;\r\n  limit = 10;\r\n\r\n  posts: Post[] = [];\r\n\r\n  sub$ = [];\r\n  modal: HTMLIonModalElement;\r\n\r\n  infiniteScrollTarget: any;\r\n  @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n\r\n  refresherTarget: any;\r\n\r\n  showPost = false;\r\n\r\n  user: User;\r\n  \r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private postService: PostService,\r\n    private signals: MySignals,\r\n    public modalController: ModalController,\r\n\r\n  ) { }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    UtilityService.destroySubscription(this.sub$);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.sub$.push(this.signals.reloadPostsSource$.subscribe(_ => {\r\n      this.loadRecentPost(true);\r\n    }));\r\n\r\n    this.user = await this.userService.getUserLocal();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.loadRecentPost();\r\n  }\r\n\r\n  getUsername() {\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.userService.isAuthenticated();\r\n  }\r\n\r\n  gotoLogin() {\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  loadRecentPost(refresh = false) {\r\n    if (refresh) {\r\n      this.postCount = 0; // reset post count\r\n    }\r\n    const pageInfo: PageInfo = {\r\n      offset: this.postCount,\r\n      limit: this.limit,\r\n    };\r\n\r\n    this.postService.getPost(pageInfo).subscribe(posts => {\r\n      this.postCount += posts?.length;\r\n      this.infiniteScrollTarget?.complete();\r\n      this.refresherTarget?.complete();\r\n      console.log(posts);\r\n\r\n      if (refresh) {\r\n        this.posts = posts;\r\n        return;\r\n      }\r\n      this.posts = [...this.posts, ...posts];\r\n\r\n    });\r\n  }\r\n\r\n  loadMorePosts(event) {\r\n    this.infiniteScrollTarget = event.target;\r\n    this.loadRecentPost();\r\n  }\r\n\r\n  refreshPosts(event) {\r\n\r\n    this.refresherTarget = event.target;\r\n    this.loadRecentPost(true);\r\n  }\r\n\r\n  async showPostModal() {\r\n    if (!this.userService.isAuthenticated()) {\r\n      this.router.navigateByUrl('/login');\r\n      return;\r\n    }\r\n    this.modal = await this.modalController.create({\r\n      component: CreatePostComponent,\r\n      cssClass: 'my-custom-class',\r\n      componentProps: {\r\n        showHeader: true,\r\n        mediaPage: 'photos'\r\n      }\r\n    });\r\n    this.signals.closeModalSource$.subscribe(log => {\r\n      this.modal.dismiss();\r\n    });\r\n    return await this.modal.present();\r\n  }\r\n\r\n}\r\n"]}