{"version":3,"sources":["webpack:///src/app/public/forgot-password/forgot-password.page.html","webpack:///src/app/public/forgot-password/forgot-password.module.ts","webpack:///src/app/public/forgot-password/forgot-password.page.scss","webpack:///src/app/public/forgot-password/forgot-password.page.ts"],"names":["routes","path","component","ForgotPasswordPageModule","imports","forChild","declarations","ForgotPasswordPage","fb","alertController","router","toaster","alertCtrl","util","browserHistory","loadCtrl","_isEmail","user","resetForm","group","email","required","minLength","maxLength","create","header","message","buttons","text","handler","alert","present","navigateByUrl","getPreviousUrl","selector","template"],"mappings":"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","file":"public-forgot-password-forgot-password-module-es5.js","sourcesContent":["export default \"\\r\\n<ion-content>\\r\\n  <ion-row class=\\\"ion-padding\\\" style=\\\"margin-top: 2vh;\\\">\\r\\n    <ion-col size=\\\"6\\\"  (click)=\\\"goBack()\\\">\\r\\n      <ion-icon name=\\\"chevron-back-outline\\\" class=\\\"fs-20\\\"></ion-icon>&nbsp;\\r\\n      <ion-label style=\\\"margin-top: 1px; position: absolute; font-size:12px\\\">back</ion-label>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"6\\\" class=\\\"ion-float-right\\\">\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <ion-row class=\\\"ion-padding-bottom ion-padding-end ion-padding-start\\\">\\r\\n    <ion-col size=\\\"1\\\"></ion-col>\\r\\n    <ion-col size=\\\"10\\\">\\r\\n      <ion-note color=\\\"dark\\\" class=\\\"poppins-extra-bold fs-30 ion-no-padding\\\">Recover your account</ion-note>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"1\\\"></ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n\\r\\n  <form class=\\\"mt-10\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"1\\\"></ion-col>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <ion-item [ngClass]=\\\"{ 'invalid-item-md': '!loginForm.controls.email.valid' }\\\" lines=\\\"none\\\">\\r\\n          <ion-input class=\\\"input-w-icon\\\" type=\\\"email\\\" placeholder=\\\"Enter email or phone number\\\">\\r\\n          </ion-input>\\r\\n          <!-- <ion-icon color=\\\"success\\\" size=\\\"small\\\" name=\\\"checkmark-circle-outline\\\" *ngIf=\\\"\\r\\n            !loginForm.get('email').errors && loginForm.get('email').dirty&& this.loginForm.value.email!==''\\r\\n          \\\"></ion-icon>\\r\\n          <ion-icon color=\\\"danger\\\" size=\\\"small\\\" name=\\\"close-circle-outline\\\" *ngIf=\\\"\\r\\n            loginForm.get('email').errors && loginForm.get('email').dirty&& this.loginForm.value.email!==''\\r\\n          \\\"></ion-icon> -->\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"1\\\"></ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n\\r\\n    <ion-row class=\\\"mt-5\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-align-items-center ion-text-center\\\">\\r\\n        <ion-button shape=\\\"round\\\" fill=\\\"outline\\\" class=\\\"fs-16 poppins-bold\\\">N<span class=\\\"ion-text-lowercase\\\">ext</span>\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </form>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, LoadingController } from '@ionic/angular';\r\nimport { ToasterService } from 'src/app/shared/services/providers/widgets/toaster.service';\r\nimport { UtilityService } from 'src/app/shared/services/providers/utility.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { BrowserHistoryService } from 'src/app/shared/services/providers/navigation/browser-history.service';\r\n// import { InAppBrowserObject, InAppBrowser } from '@ionic-native/in-app-browser/ngx';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss']\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n  resetForm: FormGroup;\r\n  loading: HTMLIonLoadingElement;\r\n  user: User;\r\n  // _browserOption = 'location=yes,hidden=no,clearcache=yes,clearsessioncache=yes,hardwareback=yes,hidenavigationbuttons=yes,hideurlbar=no';\r\n\r\n  _isEmail = false;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public alertController: AlertController,\r\n    private router: Router,\r\n    private toaster: ToasterService,\r\n    public alertCtrl: AlertController,\r\n    private util: UtilityService,\r\n    private browserHistory: BrowserHistoryService,\r\n    private loadCtrl: LoadingController,\r\n    // private _browser: InAppBrowser\r\n  ) {\r\n    this.user = new User();\r\n   }\r\n\r\n  ngOnInit() {\r\n    // Initialize local variables\r\n    this.resetForm = this.fb.group({\r\n      email: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(30)\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n  // async onReset() {\r\n  //   if (!this.resetForm.valid) {\r\n  //     this.presentAlertPrompt();\r\n  //     return;\r\n  //   }\r\n  //   this.loading = await this.loadCtrl.create({\r\n  //     message: 'Processing ...'\r\n  //   });\r\n  //   this.util.stopLoading(this.loading);\r\n  //   // Perform reset here\r\n  //   this.userService.RequestResetLink(this.resetForm.value.email).subscribe(res => {\r\n  //     this.loading.dismiss();\r\n  //     this.alertController.create({\r\n  //       header: 'Info',\r\n  //       message:\r\n  //         'Reset link has been sent to your email',\r\n  //       buttons: [\r\n  //         {\r\n  //           text: 'Ok',\r\n  //           handler: () => {\r\n  //             this.router.navigate([\r\n  //               '/login'\r\n  //             ]);\r\n  //           }\r\n  //         }\r\n  //       ]\r\n  //     }).then(_ => _.present());\r\n  //   }, error => {\r\n  //     this.loading.dismiss();\r\n  //     if (error.search('verified') > -1) {\r\n  //       this._auth.requestVerificationLink(this.resetForm.value.email).subscribe(res => {\r\n  //         this.toaster.toast('Email is not verified! Check your email for verification link', 60);\r\n  //       }, error => {\r\n  //         this.alertCtrl.create({\r\n  //           header: `Email is not verified. A verification link is sent to ` + this.resetForm.value.email +\r\n  //             ` but it may take up 10min to show up. check spam if not in your In-box Verify your email now?`,\r\n  //           message: '',\r\n  //           buttons: [\r\n  //             {\r\n  //               text: 'No',\r\n  //               role: 'cancel',\r\n  //               cssClass: 'secondary',\r\n  //               handler: (blah) => {\r\n  //                 this.toaster.toast('Email is not verified! Check your email for verification link', 60);\r\n  //               }\r\n  //             }, {\r\n  //               text: 'Yes',\r\n  //               handler: () => {\r\n  //                 const temp = this.resetForm.value.email.split('@');\r\n  //                 if (temp.length > 1) {\r\n  //                   this.emailBrowser('https://www.' + temp[1]);\r\n  //                 }\r\n  //               }\r\n  //             }\r\n  //           ],\r\n  //           translucent: true,\r\n  //         }).then(alert => alert.present());\r\n  //       });\r\n  //     } else {\r\n  //       this.toaster.toast(error, 60);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // async emailBrowser(url: string) {\r\n  //   const browserRef: InAppBrowserObject = this._browser.create(url,\r\n  //     '_system', this._browserOption);\r\n  //   browserRef.on('loadstop').subscribe(event => {\r\n  //     this.loading.dismiss();\r\n  //   });\r\n  //   browserRef.on('exit').subscribe(event => {\r\n  //     this.loading.dismiss();\r\n  //   });\r\n  // }\r\n\r\n\r\n  async presentAlertPrompt() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Alert',\r\n      message:\r\n        'Please check your email!',\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          handler: () => {\r\n            // console.log('Confirm Ok');\r\n          }\r\n        }\r\n      ]\r\n    }); \r\n    await alert.present();\r\n  }\r\n\r\n\r\n  onValidate(email: string) {\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigateByUrl(this.browserHistory.getPreviousUrl());\r\n  }\r\n}\r\n"]}