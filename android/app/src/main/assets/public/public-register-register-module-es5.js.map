{"version":3,"sources":["webpack:///src/app/public/register/register.page.html","webpack:///src/app/public/register/register.module.ts","webpack:///src/app/public/register/register.page.scss","webpack:///src/app/public/register/register.page.ts"],"names":["routes","path","component","RegisterPageModule","imports","forChild","declarations","RegisterPage","fb","router","userService","store","alertController","_toaster","_loadCtrl","_alert","browserHistory","_isName","_isEmail","_isPhone","_isPassword","_isMatch","isShow","user","_regForm","group","fullname","required","minLength","maxLength","email","password","remember","valid","toast","value","FullName","console","log","signUp","Info","subscribe","id","navigateByUrl","error","phone","password2","getPreviousUrl","selector","template"],"mappings":"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","file":"public-register-register-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <ion-row class=\\\"ion-padding\\\" style=\\\"margin-top: 2vh;\\\">\\r\\n    <ion-col size=\\\"6\\\"  (click)=\\\"goBack()\\\">\\r\\n      <ion-icon name=\\\"chevron-back-outline\\\" class=\\\"fs-20\\\"></ion-icon>&nbsp;\\r\\n      <ion-label style=\\\"margin-top: 1px; position: absolute; font-size:12px\\\">back</ion-label>\\r\\n    </ion-col>\\r\\n    <ion-col size=\\\"6\\\" class=\\\"ion-float-right\\\">\\r\\n      <ion-label class=\\\"ion-float-right fs-12\\\" (click)=\\\"login()\\\">Log in</ion-label>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <form [formGroup]=\\\"_regForm\\\" padding>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"1\\\"></ion-col>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <!-- <ion-item lines=\\\"none\\\">\\r\\n          <ion-icon name=\\\"call\\\" padding size=\\\"small\\\"></ion-icon> -\\r\\n          <ion-input type=\\\"tel\\\" class=\\\"input-w-icon\\\" formControlName=\\\"phone\\\" placeholder=\\\"Phone\\\"></ion-input>\\r\\n          <ion-icon color=\\\"success\\\" size=\\\"small\\\" name=\\\"checkmark-circle-outline\\\"\\r\\n            *ngIf=\\\"!_regForm.get('phone').errors && _regForm.get('phone').dirty\\\"></ion-icon>\\r\\n          <ion-icon color=\\\"danger\\\" size=\\\"small\\\" name=\\\"close-circle-outline\\\"\\r\\n            *ngIf=\\\"_regForm.get('phone').errors && _regForm.get('phone').dirty\\\"></ion-icon>\\r\\n        </ion-item> -->\\r\\n\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <!-- <ion-icon name=\\\"call\\\" padding size=\\\"small\\\"></ion-icon> -->\\r\\n          <ion-input type=\\\"text\\\" class=\\\"input-w-icon\\\" formControlName=\\\"fullname\\\" placeholder=\\\"Full  name\\\"></ion-input>\\r\\n          <!-- <ion-icon color=\\\"success\\\" size=\\\"small\\\" name=\\\"checkmark-circle-outline\\\"\\r\\n            *ngIf=\\\"!_regForm.get('phone').errors && _regForm.get('phone').dirty\\\"></ion-icon> -->\\r\\n          <!-- <ion-icon color=\\\"danger\\\" size=\\\"small\\\" name=\\\"close-circle-outline\\\"\\r\\n            *ngIf=\\\"_regForm.get('phone').errors && _regForm.get('phone').dirty\\\"></ion-icon> -->\\r\\n        </ion-item>\\r\\n        \\r\\n        <ion-item [ngClass]=\\\"{ 'invalid-item-md': '!_regForm.controls.email.valid' }\\\" lines=\\\"none\\\">\\r\\n          <!-- <ion-icon name=\\\"person\\\" padding size=\\\"small\\\"> </ion-icon> -->\\r\\n          <ion-input class=\\\"input-w-icon\\\" formControlName=\\\"email\\\" type=\\\"email\\\" (keyup)=\\\"onValidate('email')\\\"\\r\\n            placeholder=\\\"Email\\\">\\r\\n          </ion-input>\\r\\n          <ion-icon color=\\\"success\\\" size=\\\"small\\\" name=\\\"checkmark-circle-outline\\\"\\r\\n            *ngIf=\\\"!_regForm.get('email').errors && _regForm.get('email').dirty&& this._regForm.value.email!==''\\\"></ion-icon>\\r\\n          <ion-icon color=\\\"danger\\\" size=\\\"small\\\" name=\\\"close-circle-outline\\\"\\r\\n            *ngIf=\\\"_regForm.get('email').errors && _regForm.get('email').dirty&& this._regForm.value.email!==''\\\"></ion-icon>\\r\\n        </ion-item>\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <!-- <ion-icon name=\\\"key\\\" padding size=\\\"small\\\"></ion-icon> -->\\r\\n          <ion-input class=\\\"input-w-icon\\\" placeholder=\\\"Password\\\" type=\\\"{{isShow?'text':'password'}}\\\" formControlName=\\\"password\\\"\\r\\n            (ionChange)=\\\"onValidate('password')\\\">\\r\\n          </ion-input>\\r\\n          <ion-icon color=\\\"success\\\" size=\\\"small\\\" name=\\\"checkmark-circle-outline\\\" *ngIf=\\\"\\r\\n            !_regForm.get('password').errors && _regForm.get('password').dirty&& this._regForm.value.password!==''\\r\\n          \\\"></ion-icon>\\r\\n          <ion-icon color=\\\"danger\\\" size=\\\"small\\\" name=\\\"close-circle-outline\\\" *ngIf=\\\"\\r\\n            _regForm.get('password').errors && _regForm.get('password').dirty&& this._regForm.value.password!==''\\r\\n          \\\"></ion-icon>\\r\\n          <ion-icon size=\\\"small\\\" name=\\\"eye-outline\\\" \\r\\n          *ngIf=\\\"_regForm.get('password').dirty && this._regForm.value.password!==''\\\" (click)=\\\"isShow=!isShow\\\"></ion-icon> \\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row style=\\\"margin-top: 5vh;\\\">\\r\\n      <ion-col size=\\\"2\\\"></ion-col>\\r\\n      <ion-col size=\\\"8\\\">\\r\\n        <ion-button shape=\\\"round\\\" expand=\\\"block\\\" class=\\\"fs-16 poppins-bold\\\" (click)=\\\"register()\\\">S<span\\r\\n            class=\\\"ion-text-lowercase\\\">ign up</span></ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\"></ion-col>\\r\\n    </ion-row>\\r\\n  </form>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \"ion-item {\\n  width: 100%;\\n  height: auto;\\n}\\n\\nform {\\n  margin-top: 4vh !important;\\n}\\n\\nion-router-outlet {\\n  margin-top: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBSkY7O0FBcUNBO0VBQ0UsMEJBQUE7QUFsQ0Y7O0FBaURBO0VBQ0UsMEJBQUE7QUE5Q0YiLCJmaWxlIjoic3JjL2FwcC9wdWJsaWMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8vIC5jb3JyZWN0LWJvdHRvbSB7XHJcbi8vICAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xyXG4vLyB9XHJcblxyXG5pb24taXRlbSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4vLyAuc29jaWFsIHtcclxuLy8gICBwYWRkaW5nLWxlZnQ6IDEwJTtcclxuLy8gICBwYWRkaW5nLXJpZ2h0OiAxMCU7XHJcbi8vIH1cclxuXHJcblxyXG4vLyAudGV4dC1jZW50ZXIge1xyXG4vLyAgIHAge1xyXG4vLyAgICAgbWFyZ2luOiAwcHg7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG5cclxuXHJcbi8vIHAge1xyXG4vLyAgIHBhZGRpbmc6IDBweDtcclxuLy8gfVxyXG5cclxuLy8gLnRleHQtY2VudGVyIHtcclxuLy8gICBwIHtcclxuLy8gICAgIG1hcmdpbjogMHB4O1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gcCB7XHJcbi8vICAgcGFkZGluZzogMHB4O1xyXG4vLyAgIG1hcmdpbjogMDtcclxuLy8gfVxyXG5cclxuXHJcbmZvcm0ge1xyXG4gIG1hcmdpbi10b3A6IDR2aCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuLy8gLmdvb2dsZS1idXR0b24ge1xyXG5cclxuLy8gICBidXR0b24ge1xyXG4vLyAgICAgYmFja2dyb3VuZDogIzkwMmIyMiAhaW1wb3J0YW50O1xyXG4vLyAgICAgbWFyZ2luOiAwO1xyXG4vLyAgICAgcGFkZGluZzogMDtcclxuLy8gICAgIG1hcmdpbi10b3A6IDVweDtcclxuLy8gICB9XHJcblxyXG4vLyB9XHJcblxyXG5pb24tcm91dGVyLW91dGxldCB7XHJcbiAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\";","import { BrowserHistoryService } from 'src/app/shared/services/providers/navigation/browser-history.service';\r\n\r\nimport { MyStorage } from './../../shared/services/providers/storage/my-storage.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, LoadingController } from '@ionic/angular';\r\nimport { ToasterService } from 'src/app/shared/services/providers/widgets/toaster.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/shared/services/model-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss']\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  public _regForm: FormGroup;\r\n  _loading: HTMLIonLoadingElement;\r\n\r\n  _isName = false;\r\n  _isEmail = false;\r\n  _isPhone = false;\r\n  _isPassword = false;\r\n  _isMatch = false;\r\n  isShow = false;\r\n  user: User;\r\n\r\n  //  _browserOption = 'location=yes,hidden=no,clearcache=yes,clearsessioncache=yes,hardwareback=yes,hidenavigationbuttons=yes,hideurlbar=no';\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    // private _fs: MyFileService,\r\n    private store: MyStorage,\r\n    public alertController: AlertController,\r\n    private _toaster: ToasterService,\r\n    // private _util: UtilityService,\r\n    // private _browser: InAppBrowser,\r\n    private _loadCtrl: LoadingController,\r\n    private _alert: AlertController,\r\n    private browserHistory: BrowserHistoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Initializations\r\n    this.user = new User();\r\n\r\n    this._regForm = this.fb.group({\r\n      fullname: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(30)\r\n        ]\r\n      ],\r\n      email: [\r\n        this.user?.email || '',\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(30)\r\n        ]\r\n      ],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(5), Validators.maxLength(20)]\r\n      ],\r\n      // password2: [\r\n      //   '',\r\n      //   [Validators.required, Validators.minLength(5), Validators.maxLength(20)]\r\n      // ],\r\n      // phone: [\r\n      //   '',\r\n      //   [Validators.required, Validators.minLength(5), Validators.maxLength(20)]\r\n      // ],\r\n      remember: [false]\r\n    });\r\n  }\r\n\r\n  async register() {\r\n    if (!this._regForm.valid) {\r\n      this._toaster.toast('Provide valid information');\r\n      return;\r\n    }\r\n\r\n    this.user = this.user || new User();\r\n    this.user.email = this._regForm.value.email;\r\n    this.user.password = this._regForm.value.password;\r\n    this.user.FullName = this._regForm.value.fullname;\r\n    console.log(this.user);\r\n    this.userService.signUp(this.user.Info as User).subscribe(user => {\r\n      if ((user as User).id) {\r\n        // success \r\n        this.router.navigateByUrl('/login');\r\n      }\r\n    }, error => {\r\n      this._toaster.toast(error);\r\n    });\r\n\r\n\r\n    //   if (!this.getData()) {\r\n    //     this.presentAlertPrompt();\r\n    //     return;\r\n    //   }\r\n    //   this._loading = await this._loadCtrl.create({\r\n    //     message: 'Processing ...'\r\n    //   });\r\n    //   this._util.stopLoading(this._loading);\r\n    //   await this._loading.present();\r\n    //   this.auth.register(this._userInfo).subscribe(res => {\r\n    //     console.log(res);\r\n    //     if (res.id) {\r\n    //       this._fstore.set('foldersCreated', false).then(() => {\r\n    //         // redirect to login page\r\n    //         this._loading.dismiss();\r\n    //         this._alert.create({\r\n    //           header: 'Information',\r\n    //           message: 'Please check your inbox of the email provided to complete registration.',\r\n    //           buttons: [\r\n    //             {\r\n    //               text: 'Ok',\r\n    //               role: 'cancel',\r\n    //               cssClass: 'secondary',\r\n    //               handler: () => {\r\n    //                 this.router.navigate([\r\n    //                   '/login'\r\n    //                 ]);\r\n    //               }\r\n    //             }\r\n    //           ]\r\n    //         }).then(alert => alert.present());\r\n    //       });\r\n    //     }\r\n    //   },\r\n    //     error => {\r\n    //       console.log(error);\r\n    //       this._loading.dismiss();\r\n    //       if (error.toString().indexOf('in use') > -1) {\r\n    //         this._toaster.toast('Email is already in use!');\r\n    //       } else if (error.toString().indexOf('verified') > -1) {\r\n    //         this._alert.create({\r\n    //           header: `Email is not verified. A verification link is sent to ` +\r\n    //             this._regForm.value.email +\r\n    //             `but it may take up 10min to show up. check spam if not in your In-box Verify your email now?`,\r\n    //           message: '',\r\n    //           buttons: [\r\n    //             {\r\n    //               text: 'No',\r\n    //               role: 'cancel',\r\n    //               cssClass: 'secondary',\r\n    //               handler: (blah) => {\r\n    //                 this._toaster.toast('Email is not verified! Check your email for verification link or reset password', 60);\r\n    //               }\r\n    //             }, {\r\n    //               text: 'Yes',\r\n    //               handler: () => {\r\n    //                 const temp = this._regForm.value.emai.split('@');\r\n    //                 if (temp.length > 1) {\r\n    //                   this.emailBrowser('https://www.' + temp[1]);\r\n    //                 }\r\n    //               }\r\n    //             }\r\n    //           ],\r\n    //           translucent: true,\r\n    //         }).then(alert => alert.present());\r\n    //       } else {\r\n    //         this._toaster.toast('Check Credentials | Network');\r\n    //       }\r\n    //     });\r\n  }\r\n\r\n  // async emailBrowser(url: string) {\r\n  //   const browserRef: InAppBrowserObject = this._browser.create(url,\r\n  //     '_system', this._browserOption);\r\n\r\n\r\n  //   browserRef.on('loadstop').subscribe(event => {\r\n  //     this._loading.dismiss();\r\n  //   });\r\n  //   browserRef.on('exit').subscribe(event => {\r\n  //     this._loading.dismiss();\r\n  //   });\r\n  // }\r\n\r\n  getData(): boolean {\r\n    this.user.email = this._regForm.value.email;\r\n    this.user.phone = this._regForm.value.phone;\r\n    this.user.password = this._regForm.value.password;\r\n\r\n    if (\r\n      this._regForm.valid &&\r\n      this._regForm.value.password === this._regForm.value.password2\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onValidate(value: string) {\r\n    console.log(value);\r\n    switch (value) {\r\n      case 'email':\r\n        this._isEmail = true;\r\n        break;\r\n      case 'phone':\r\n        this._isPhone = true;\r\n        break;\r\n      case 'password':\r\n        this._isPassword = true;\r\n        if (this._regForm.value.password === this._regForm.value.password2) {\r\n          this._isMatch = true;\r\n        } else {\r\n          this._isMatch = false;\r\n        }\r\n        break;\r\n      case 'password2':\r\n        if (this._regForm.value.password === this._regForm.value.password2) {\r\n          this._isMatch = true;\r\n        } else {\r\n          this._isMatch = false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // async presentAlertPrompt() {\r\n  //   const alert = await this.alertController.create({\r\n  //     header: 'Alert',\r\n  //     message:\r\n  //       'Information is invalid',\r\n  //     buttons: [\r\n  //       {\r\n  //         text: 'Ok',\r\n  //         handler: () => {\r\n  //           console.log('Confirm Ok');\r\n  //         }\r\n  //       }\r\n  //     ]\r\n  //   });\r\n\r\n  //   await alert.present();\r\n  // }\r\n\r\n  login() {\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigateByUrl(this.browserHistory.getPreviousUrl());\r\n  }\r\n}\r\n"]}